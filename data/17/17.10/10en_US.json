jsonCallback(
{
  "xdzial": "MODULE",
  "xSX": "rH-S4L2T1",
  "xnazwa1": "FOUR CHANNEL TRANSMITTER WITH A TEMPERATURE PROBE",
  "xopis_naglowek": "MODULE DESCRIPTION:",
  "xopis_sprzet": "The<b>rH-S4L2T1</b> has { przewody} for the connection of four monostable potential free contacts. The module transmits information about the opening or closing of the contacts to the system.<p>The<b>rH-S4L2T1</b>has a digital thermometer for measuring the temperature of its surroundings. The thermometer is connected to the unit by a 10cm cable. The temperature is read every 30 seconds and if there has been a change or if 5 minutes have elapsed, the reading is sent to the system. The module also has signalling LEDs that convert information from the system to light signals. Communication with the server takes place by radio.<p>The<b>rH-S4L2T1</b>module is particularly suitable for the regulation of room temperature. The temperature sensor is usually fitted under the switch buttons and these can be used to control the heating, lighting, blind or lighting scene options.",
  "xopis": "The rH-S4L2T1 module has an object that consists of four inputs and four binary outputs (two-state) that are separate for each physical input. Opening or closing of the contacts changes the logic state of the corresponding output.<p>The element has two byte inputs that control the signalling LEDs. If a logical \"1\" is received at the input, the LED lights up for 10 seconds. The rH-S4L2T1 is a sensor and does not listen to signals from the server. After a signal is received at the LED input, the contacts should be opened and then closed so that the diode lights up. The length of the LED flashes and the time between them can be set in the <a href=\"../../1/1.836/836.html\">SX 836</a>LED diode coder",
  "xsymbol_naglowek": "SYMBOL:",
  "xwejscia_naglowek": "INPUTS",
  "xrysunek": "figure",
  "xnazwa": "name",
  "xtyp": "type",
  "xwyjscia_naglowek": "OUTPUTS",
  "xwejscia_1_2": "change in the the contacts' output state",
  "xwejscia_1_3": "binary",
  "xwejscia_2_2": "control of the LEDs",
  "xwejscia_2_3": "byte",
  "xwyjscia_1_2": "state of contacts 1, 2, 3, 4",
  "xwyjscia_1_3": "binary",
  "xwyjscia_2_2": "measurement of surrounding temperature",
  "xwyjscia_2_3": "temperature",
  "tab1_tytul": "Installer Settings",
  "tab1_1_1": "function name",
  "tab1_1_2": "description",
  "tab1_1_3": "range",
  "tab1_1_4": "unit/description",
  "tab1_2_1": "connection monitoring",
  "tab1_2_2": "determines actions if connection with the server is lost",
  "tab1_2_3": "do not control",
  "tab1_2_4": "lack of control of the connection correctness",
  "tab1_3_3": "issue a warning",
  "tab1_3_4": "system warning in the event of a loss of connection",
  "tab1_4_3": "set off the alarm",
  "tab1_4_4": "sets off the alarm in the event of a loss of connection",
  "tab11_5_1": "temperature calibration",
  "tab11_5_2": "corrects the set temperature to the current temperature",
  "tab11_5_3": "-50.0, +50.0",
  "tab11_5_4": "0.1°C",
  "tab1_5_1": "contact 1, 2, 3, 4: active when ",
  "tab1_5_2": "defines which state of the output contact is the active state, or logical \"1\"",
  "tab1_5_3": "closed",
  "tab1_5_4": "logical \"1\" at the output when the contacts are closed",
  "tab1_6_3": "open",
  "tab1_6_4": "logical \"1\" at the output when the contacts are open",
  "tab1_7_1": "maximum period of activity (0=bistable)",
  "tab1_7_2": "sets the time after which the output state is changed to a logical \"0\" if there is no response from the module ",
  "tab1_7_3": "0-600",
  "tab1_7_4": "second",
  "tab1dodatek": "\"Contact active when\" function: The system is based on additive logic which means that the rest state is \"0\" while the active (nonstable) state is \"1\". For a monostable switch (one that has one stable state - an integral spring) the stable state is the inactive state, i.e. there is a logical \"0\" at the object output.<p>\"Maximum active time\" function: Setting the parameter to \"0\" disconnects the automatic output zeroing mechanism. This is most often the case when the contact is treated as bistable (e.g. a microswitch).",
  "tab1dodatek2": "<p>If any element is connected to the binary output of the object, the signal from that element will be added to the signal from the physical contact and returned to the corresponding logic output.<center><img src=\"10_sumowanie.jpg\"></center><p>The system also allows different types of signals to be connected and performs an automatic conversion before adding them together.",
  "rejestracja_tytul": "Registration in the system",
  "uwagi_tytul": "WARNING!",
  "rejestracja": "1. Right click the mouse to access the contextual menu and choose \"Register\" <p>2. Press and hold the left switch (close the circuit by connecting the S1 and C wires).<p>3. After 5 seconds, the program will display a confirmation message that the module has been registered in the system, or a warning message if this was not successful.",
  "uwagi": "The method of connection is described in these instructions. Installation, connection and regulation activities should be carried out by qualified personnel who are familiar with the maintenance and operation instructions of the module. Transport, storage and method of use of the module will affect its correct functioning. Installation of the module is not recommended if there are missing parts or the module is damaged or deformed. If the module malfunctions, it should be returned to the manufacturer.",
  "dane1_1": "batteries",
  "dane1_2": "2xAAA (alkaline)",
  "dane2_1": "battery operating period",
  "dane2_2": "24 months",
  "dane3_1": "power voltage range",
  "dane3_2": "2.5 - 3.5V",
  "dane4_1": "radio connection",
  "dane4_2": "868MHz",
  "dane5_1": "signal strength",
  "dane5_2": "9mW",
  "dane6_1": "type of transmission",
  "dane6_2": "two directional",
  "dane7_1": "encoding",
  "dane7_2": "yes",
  "dane8_1": "range in open space",
  "dane8_2": "100m",
  "dane9_1": "time to log into the system",
  "dane9_2": "5 minutes",
  "dane10_1": "inputs",
  "dane10_2": "2x contact",
  "dane11_1": "contact voltage",
  "dane11_2": "3V",
  "dane12_1": "contact voltage",
  "dane12_2": "250µA",
  "dane12a_1": "temperature measurement range",
  "dane12a_2": "-20ºC, +45ºC",
  "dane12b_1": "temperature measurement resolution",
  "dane12b_2": "0.1°C",
  "dane12c_1": "temperature measurement accuracy",
  "dane12c_2": "+/- 0.5°C",
  "dane13_1": "storage temperature",
  "dane13_2": "-20ºC, +50ºC",
  "dane14_1": "operating temperature",
  "dane14_2": "-20ºC, +45ºC",
  "dane15_1": "dimensions",
  "dane15_2": "51 x 37 x 20 mm",
  "dane16_1": "protection code",
  "dane16_2": "IP 20",
  "dane17_1": "operating position",
  "dane17_2": "any",
  "dane18_1": "type of housing",
  "dane18_2": "can",
  "montaz_tytul": "Installation",
  "montaz": "<center><img src=\"10_Schemat S4L2T1.png\"></center><ul><li>Connect the rH-S4L2T1 cables to the switch keys according to the above schematic.</li><li>Insert the battery observing the correct polarity and replace the cover.</li><li><b>If there are uninsulated cables in the can, disconnect the power circuit. Using appropriate tools, check that there is no power in the circuit and then isolate as needed.</b></li><li>Connect the switch</li><li>Fit the module in the can.</li><li>Position the temperature sensor and LED.</li><li>Register the element</li></ul>",
  "dane_tytul": "Technical data",
  "xxrysunek": "figure",
  "xxnazwa": "name",
  "xxtyp": "type",
  "sto": "Document version:",
  "le": "<a href=\"../../common/legenda.html\" class=\"leg\">LEGEND</a>",
  "xwyjscia_3_4": "output of any controller",
  "xxpolaczenie": "connection"
}
);