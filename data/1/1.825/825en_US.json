jsonCallback(
{
  "xdzial": "LOGIC",
  "xSX": "SX 825",
  "xnazwa1": "UP-DOWN COUNTER",
  "xopis_naglowek": "DESCRIPTION:",
  "xopis": "The SX 825 logical element has two binary inputs which increase and decrease the value {  która jest podawana na wyjściu bajtowym} as well as the set and reset inputs that set the maximum or minimum values. The value and capacity intervals of the counter are set by the installer. <p>The counter can operate in two ways:<ul><li>{ TRYB PROSTY}:<p>After reaching the maximum value, the counter stops and sends an impulse to the \"maximum value\" output.<br>After reaching the minimum value, the counter stops and sends an impulse to the \"minimum value\" output.</li><li>{ TRYB ROZSZERZONY}:<p>After reaching the maximum value, the counter sends an impulse to the \"maximum value\" output.<br>{ Po przekroczeniu tej wartości krótki impuls zostaje wysłany} to the \"overflow\" output { i licznik zaczyna liczyć od początku.}<p>After reaching the minimum value, the counter  sends an impulse to the \"minimum value\" output.<br>{ Po przekroczeniu tej wartości krótki impuls zostaje wysłany} to the \"underflow\" output { i licznik zaczyna liczyć od końca.}</li></ul>",
  "xsymbol_naglowek": "SYMBOL:",
  "xwejscia_naglowek": "INPUTS",
  "xrysunek": "figure",
  "xnazwa": "name",
  "xtyp": "type",
  "xpolaczenie": "connection",
  "xwyjscia_naglowek": "OUTPUTS",
  "xwejscia_1_2": "increase the value",
  "xwejscia_1_3": "binary",
  "xwejscia_1_4": "output of any element",
  "xwejscia_2_2": "decrease value",
  "xwejscia_2_3": "binary",
  "xwejscia_2_4": "output of any element",
  "xwejscia_3_2": "reset - sets the minimum value",
  "xwejscia_3_3": "binary",
  "xwejscia_3_4": "output of any element",
  "xwyjscia_1_2": "value",
  "xwyjscia_1_3": "byte",
  "xwyjscia_1_4": "input of any element",
  "tab1_tytul": "Installer Settings",
  "tab1_1_1": "function name",
  "tab1_1_2": "description",
  "tab1_1_3": "range",
  "tab1_2_1": "counter interval",
  "tab1_2_2": "sets the intervals which will be used for counting",
  "tab1_2_3": "1-100",
  "tab1_3_1": "maximum value",
  "tab1_3_2": "sets the maximum value",
  "tab1_3_3": "2-255",
  "xxrysunek": "figure",
  "xxnazwa": "name",
  "xxtyp": "type",
  "xxpolaczenie": "connection",
  "sto": "Document version:",
  "le": "<a href=\"../../common/legenda.html\" class=\"leg\">LEGEND</a>",
  "schemat": "This schematic shows how the SX 825 object can be used in the design of a car park with a counter for the number of occupied spaces. The maximum number of cars that can fit into the car park was set in the SX 825 Installer Settings.<p>The rH-S2 module is physically connected to the barrier sensor at the entrance to the car park (1 - entry, 2 - exit). The rH-R3 module is a three channel relay. Activation of the first channel causes the barrier to open and allows cars to enter but only if there are unoccupied parking spaces. If all parking spaces are occupied, the barrier will not open.<p>In addition, if a display is connected to the byte output of the counter, it will show the number of cars in the car park.",
  "schemat_tytul": "Connection schematic",
  "tab1_4_1": "minimum value",
  "tab1_4_2": "sets the minimum value",
  "tab1_4_3": "0-254",
  "xwejscia_4_2": "set",
  "xwejscia_4_3": "binary",
  "xwejscia_4_4": "output of any element",
  "xwyjscia_2_2": "maximum value",
  "xwyjscia_2_3": "binary",
  "xwyjscia_2_4": "input of any element",
  "xwyjscia_3_2": "overflow",
  "xwyjscia_3_3": "binary",
  "xwyjscia_3_4": "input of any element",
  "xwyjscia_4_2": "minimum value",
  "xwyjscia_4_3": "binary",
  "xwyjscia_4_4": "output of any element",
  "xwyjscia_5_2": "insufficient",
  "xwyjscia_5_3": "binary",
  "xwyjscia_5_4": "input of any element"
}
);